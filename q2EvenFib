//
//  q2evenFib.cpp
//
//    Question 2 Project Euler... https://projecteuler.net/problems
//    Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
//    By starting with 1 and 2, the first 10 terms will be:
//      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//    By considering the terms in the Fibonacci sequence whose values do not 
//    exceed four million, find the sum of the even-valued terms.
//
#include <iostream>


int main(int argc, const char * argv[])
{
    // insert code here...
  int max = 4000000;
  int evenFibSum = 0;
  int newSeqNum  = 0;
  int prevTerm1  = 1;
  int prevTerm2  = 2;
  newSeqNum      = prevTerm1 + prevTerm2;
  
  evenFibSum = prevTerm2;
  while (newSeqNum < max){
    //printf(" %d ",  newSeqNum);
    prevTerm1 = prevTerm2;
    prevTerm2 = newSeqNum;
    if ( (newSeqNum % 2) == 0) {
      evenFibSum = evenFibSum + newSeqNum;
      //printf(" %d ",  evenFibSum);
    }
    newSeqNum = prevTerm1 + prevTerm2;    
  } 
  
 
 printf(" %d ",  evenFibSum);
  
  //printf("Below 1000 Multiples of 3 and 5 summation\n %d \n",  mult3x5sum);
  std::cout << "\nHello, Worldd!\n";
  return 0;

}
